name: Create Release
on:
  push:
    tags:
      - '*.*.*'
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget
  DALAMUD_HOME: ${{ github.workspace }}/dalamud

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all history to allow automatic versioning using MinVer

      - name: Download Dalamud
        run: |
          mkdir -p ${{ env.DALAMUD_HOME }}
          curl -L https://goatcorp.github.io/dalamud-distrib/latest.zip -o latest.zip
          unzip latest.zip -d ${{ env.DALAMUD_HOME }}          

      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # Create the NuGet package in the folder from the environment variable NuGetDirectory
      - run: |
          $env:DALAMUD_HOME = "${{ env.DALAMUD_HOME }}"
          dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} src

      # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg
  run_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Run tests
        run: |
          $env:DALAMUD_HOME = "${{ env.DALAMUD_HOME }}"
          dotnet test --configuration Release src
  release:
    name: Create release
    needs: [ create_nuget, run_test ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --notes '${{ steps.extract-release-notes.outputs.release_notes }}'
  deploy:
    runs-on: ubuntu-latest
    needs: [ create_nuget, run_test, release ]
    steps:
      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # Publish all NuGet packages to NuGet.org
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }